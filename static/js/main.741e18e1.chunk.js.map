{"version":3,"sources":["App.js","index.js"],"names":["App","React","content","setContent","style","setStyle","className","value","onChange","e","a","target","text","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0LAmGeA,MAlCf,WAAgB,IAAD,EACiBC,WA9Df,ihCA6DF,mBACNC,EADM,KACGC,EADH,OAEaF,WA3BV,oVAyBH,mBAENG,EAFM,KAECC,EAFD,KAUb,OACE,sBAAKC,UAAU,MAAf,UACE,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,UAAf,UACE,yCACA,0BAAUA,UAAU,SAASC,MAAOL,EAASM,SAC3C,SAAAC,GAAC,OAZEC,EAYID,EAAEE,OAAOJ,WAXxBJ,EAAWO,GADD,IAACA,QAeP,sBAAKJ,UAAU,QAAf,UACE,uCACA,0BAAUA,UAAU,SAASC,MAAOH,EAAOI,SAAU,SAAAC,GAAC,OAdhDC,EAcuDD,EAAEE,OAAOJ,WAb5EF,EAASK,GADE,IAACA,WAiBV,qBAAKJ,UAAU,UAAf,SACE,cAAC,gBAAD,CAAeM,KAAMR,EAArB,SACE,cAAC,cAAD,CAAaQ,KAAMV,YCvF7BW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.741e18e1.chunk.js","sourcesContent":["import './App.css';\nimport * as React from 'react'\nimport {WritersMark, StyleProvider} from 'writers-mark-react'\n\nconst defaultText = `#\nWelcome to Writer's Mark!\n\n##\nIntroduction\n\nIt's kinda like markdown, but a lot more flexible. It's also a lot safer, since arbitrary HTML cannot be injected, and links are prohibited. Feel free to poke around the text and/or the style to see what you can do!\n\n##\nExamples:\n\nParagraphs are blocks of text.\nThey can be written accross multiple lines\nor on one single long line. \n\nAn empty line of text separates paragraphs\n\n!sample_para_rule!\nYou can style a paragraph by prepending it with the name of a \"para\" rule.\n\nYou can style span of text, like *this* by wrapping them around a span rule's name.\n\nAlternatively, span rules can have [i]Different beginning and ends[/i].\n\n__aside__\nStyles can also be added directly in the text (at the top or bottom of the document).\nNote that the --- mark needs to be either the very first or very last line of the document.\nTry adding a blank line at the bottom, and see what happens.\n\n---\npara __aside__ {\n  margin-left: 64px;\n  font-family: monospace;\n}\n---`\n\nconst defaultStyle = `para # {\n  font-size: 1.5em;\n  margin-left: 32px;\n}\n\npara ## {\n  font-size: 1.2em;\n  font-weight: bold;\n  margin-left: 32px;\n}\n\npara !sample_para_rule! {\n  margin-left: 32px;\n  margin-right: 32px;\n  background-color: black;\n  color: white;\n}\nspan * {\n  font-weight:bold;\n}\n\nspan [i] [/i] {\n  font-style: italic;\n}`\n\nfunction App() {\n  const [content, setContent] = React.useState(defaultText);\n  const [style, setStyle] = React.useState(defaultStyle);\n\n  const tmp = (a)=>{\n    setContent(a)\n  }\n  const tmpb = (a)=>{\n    setStyle(a)\n  }\n  return (\n    <div className=\"App\">\n      <div className=\"Authoring\">\n        <div className=\"Content\">\n          <h3>Content</h3>\n          <textarea className=\"Editor\" value={content} onChange={\n            e=>tmp(e.target.value)\n          }></textarea >\n        </div>\n        <div className=\"Style\">\n          <h3>Style</h3>\n          <textarea className=\"Editor\" value={style} onChange={e=>tmpb(e.target.value)}></textarea >\n        </div>\n      </div>\n      <div className=\"Display\">\n        <StyleProvider text={style}>\n          <WritersMark text={content}/>\n        </StyleProvider>\n      </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}